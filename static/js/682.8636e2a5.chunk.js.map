{"version":3,"file":"static/js/682.8636e2a5.chunk.js","mappings":"kMAAaA,EAAc,SAAC,GAAD,SAAGC,SAAwBC,KAA3B,E,oBCC3B,EAAuB,mBAAvB,EAAkD,oBAAlD,EAA8E,oBAA9E,EAA2G,qB,mBC6E3G,EApEa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BF,EAAAA,EAAAA,UAAS,IAApC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAEJ,IAAMI,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,SACHR,EAASQ,GACT,MAEF,QACE,MAAM,IAAIC,MAAM,2BAErB,EASD,OACE,kBAAMC,SARa,SAAAJ,GACnBA,EAAEK,iBAEFV,GAASW,EAAAA,EAAAA,IAAgB,CAAEf,KAAAA,EAAME,OAAAA,KACjCD,EAAQ,IACRE,EAAS,GACV,EAE+Ba,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXC,KAAK,OACLlB,KAAK,OACLW,MAAOX,EACPmB,YAAY,cACZC,QAAQ,yHACRC,MAAM,yIACNC,SAAUd,EACVe,UAAQ,QAGZ,mBAAOP,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXC,KAAK,MACLlB,KAAK,SACLW,MAAOT,EACPiB,YAAY,gBACZC,QAAQ,yFACRE,SAAUd,EACVa,MAAM,+FACNE,UAAQ,QAGZ,mBAAQP,UAAWC,EAAeC,KAAK,SAAvC,4BAKL,EC7EYM,EAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,ECC9B,EAAuB,2BCAvB,EAAuB,4BAAvB,EAA0D,4BAA1D,EAA4F,2BCwB5F,EAlBoB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAI3B,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzBE,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAIW,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,UACGjB,EADH,KACWE,MAEX,mBACEc,UAAWC,EACXC,KAAK,SACLU,QAAS,kBAAMxB,GAASyB,EAAAA,EAAAA,IAAmBF,GAAlC,EAHX,sBAJ+BA,EAapC,ECWD,EA1BoB,WAClB,IAAM9B,GAAWiC,EAAAA,EAAAA,IAAYlC,GACvBmC,GAAmBD,EAAAA,EAAAA,IAAYN,GAW/BQ,EATqB,WACzB,IAAMC,EAAkBF,EAAiBG,OAAOC,cAKhD,OAHetC,EAAS6B,QAAO,SAAAU,GAAO,OACpCA,EAAQpC,KAAKkC,OAAOC,cAAcE,SAASJ,EADP,GAIvC,CAEuBK,GAExB,OACE,gCAC8B,IAA3BN,EAAgBO,SAAgB,qDACjC,eAAIvB,UAAWC,EAAf,SACGe,EAAgBQ,KAAI,YAA2B,IAAxBb,EAAuB,EAAvBA,GAAI3B,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAChC,OAAO,SAAC,EAAD,CAAsByB,GAAIA,EAAI3B,KAAMA,EAAME,OAAQA,GAAhCyB,EAC1B,QAIR,E,UChCD,EAAwB,4BAAxB,EAA4D,4BAA5D,EAAkG,8BCwBlG,EAnBsB,WACpB,IAAMD,GAASI,EAAAA,EAAAA,IAAYN,GACrBpB,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAKW,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXC,KAAK,OACLC,YAAY,gBACZR,MAAOe,EACPJ,SAAU,SAAAb,GAAC,OAAIL,GAASqC,EAAAA,EAAAA,GAAUhC,EAAEC,OAAOC,OAAhC,QAKpB,ECtBD,EAA8B,iCCM9B,EAJkB,SAAC,GAAmB,IAAjB+B,EAAgB,EAAhBA,UACnB,OAAO,eAAI1B,UAAWC,EAAf,SAAoCyB,GAC5C,ECJD,EAAwB,qBCKxB,EAHc,SAAC,GAAe,IAAbrB,EAAY,EAAZA,MACf,OAAO,eAAIL,UAAWC,EAAf,SAA8BI,GACtC,ECwBD,EApBqB,WACnB,IAAMxB,GAAWiC,EAAAA,EAAAA,IAAYlC,GAEvB+C,EAAUC,QAAQ/C,EAAS0C,QACjC,OACE,iCACE,SAAC,EAAD,CAAWG,UAAU,gBACrB,SAAC,EAAD,KACA,SAAC,EAAD,CAAOrB,MAAM,aAEZsB,IAAW,SAAC,EAAD,IACXA,IAAW,SAAC,EAAD,KAEVA,IACA,cAAG3B,UAAU,UAAb,4DAIP,C","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/Form/form.module.css?cfaa","components/Form/Form.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Contacts/ContactsList/contact-list.module.css?3222","webpack://react-homework-template/./src/components/Contacts/ContactsItem/contacts-item.module.css?a2ab","components/Contacts/ContactsItem/ContactsItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/FieldToFilter/field-filter.module.css?c081","components/FieldToFilter/FieldToFilter.jsx","webpack://react-homework-template/./src/components/Shared/maine-title.module.css?2464","components/Shared/MaineTitle.jsx","webpack://react-homework-template/./src/components/Shared/title.module.css?c1e1","components/Shared/Title.jsx","components/Page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__v9NsD\",\"label\":\"form_label__qLsdy\",\"input\":\"form_input__cqeL6\",\"button\":\"form_button__8zDUO\"};","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './form.module.css';\n\nimport {\n  fetchAddContact,\n  fetchAllContacts,\n} from 'redux/contacts/contacts-operations';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setPhone(value);\n        break;\n\n      default:\n        throw new Error(\"There isn't such option\");\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(fetchAddContact({ name, number }));\n    setName('');\n    setPhone('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Taras Bulba\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"099-777-77-77\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contacts\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","export const getFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__UDs0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts-item_item__X2ZlU\",\"text\":\"contacts-item_text__I4WAQ\",\"btn\":\"contacts-item_btn__7FAA-\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport styles from './contacts-item.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={styles.item} key={id}>\n      <p className={styles.text}>\n        {name}: {number}\n      </p>\n      <button\n        className={styles.btn}\n        type=\"button\"\n        onClick={() => dispatch(fetchDeleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport styles from './contact-list.module.css';\n\nimport ContactItem from '../ContactsItem/ContactsItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filteredContacts = useSelector(getFilter);\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filteredContacts.trim().toLowerCase();\n\n    const result = contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n    return result;\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      {visibleContacts.length === 0 && <p>There is no such contact</p>}\n      <ul className={styles.list}>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"field-filter_label__aL3Ao\",\"input\":\"field-filter_input__OQeHS\",\"wrapper\":\"field-filter_wrapper__v96xC\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport styles from './field-filter.module.css';\n\nconst FieldToFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className={styles.wrapper}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"Enter name...\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default FieldToFilter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"maine_title\":\"maine-title_maine_title__LF22q\"};","import styles from './maine-title.module.css';\nimport PropTypes from 'prop-types';\n\nconst MainTitle = ({ mainTitle }) => {\n  return <h1 className={styles.maine_title}>{mainTitle}</h1>;\n};\n\nexport default MainTitle;\n\nMainTitle.propTypes = {\n  mainTitle: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__yj9FK\"};","import styles from './title.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => {\n  return <h2 className={styles.title}>{title}</h2>;\n};\nexport default Title;\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nimport Form from 'components/Form/Form';\nimport ContactList from 'components/Contacts/ContactsList/ContactsList';\nimport FieldToFilter from 'components/FieldToFilter/FieldToFilter';\nimport MainTitle from 'components/Shared/MaineTitle';\nimport Title from 'components/Shared/Title';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n\n  const isItems = Boolean(contacts.length);\n  return (\n    <>\n      <MainTitle mainTitle=\"Phonebook \" />\n      <Form />\n      <Title title=\"Contacts\" />\n\n      {isItems && <FieldToFilter />}\n      {isItems && <ContactList />}\n\n      {!isItems && (\n        <p className=\"massage\">Your phonebook is empty. Please add contact.</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","contacts","items","useState","name","setName","number","setPhone","dispatch","useDispatch","useEffect","fetchAllContacts","handleChange","e","target","value","Error","onSubmit","preventDefault","fetchAddContact","className","styles","type","placeholder","pattern","title","onChange","required","getFilter","store","filter","id","onClick","fetchDeleteContact","useSelector","filteredContacts","visibleContacts","normalizeFilter","trim","toLowerCase","contact","includes","getVisibleContacts","length","map","setFilter","mainTitle","isItems","Boolean"],"sourceRoot":""}