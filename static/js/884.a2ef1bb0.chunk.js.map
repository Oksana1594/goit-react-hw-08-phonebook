{"version":3,"file":"static/js/884.a2ef1bb0.chunk.js","mappings":"wQAIA,EAJqB,CACnBA,MAAO,GACPC,SAAU,ICDZ,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAwF,wB,yFCoGxF,EAvFkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBH,EAAAA,EAAAA,WAAS,GAAjC,eAAOI,EAAP,KAAaC,EAAb,KAIMC,GAAeC,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdP,GAAS,SAAAQ,GACP,OAAO,kBAAKA,GAAZ,cAAwBF,EAAOC,GAChC,GACF,GACD,CAACP,IASKN,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAEf,OACE,iBAAMc,UAAWC,EAAUd,SATR,SAAAe,GACnBA,EAAEC,iBACFhB,GAAS,UAAKG,IACdC,GAAS,UAAKF,GACf,EAKC,UACE,UAAC,KAAD,CACEe,QAAQ,MACRC,QAAQ,OACRC,cAAc,SACdC,YAAU,EAJZ,WAME,SAAC,IAAD,CAAWC,GAAG,KAAKC,QAAQ,QAA3B,oBAGA,SAAC,EAAAC,EAAD,CACEV,UAAWC,EACXU,iBAAiB,YACjBC,KAAK,KACLC,GAAG,QACHC,KAAK,QACLC,YAAY,cACZC,SAAUtB,EACVI,MAAOb,EACPY,KAAK,QACLoB,QAAQ,2CACRC,MAAM,uCAER,SAAC,IAAD,CAAWV,GAAG,KAAKC,QAAQ,WAA3B,uBAGA,UAAC,IAAD,CAAYG,KAAK,KAAjB,WACE,SAAC,EAAAF,EAAD,CACEV,UAAWC,EACXU,iBAAiB,YACjBC,KAAK,KACLC,GAAG,WACHM,GAAG,SACHL,KAAMtB,EAAO,OAAS,WACtBuB,YAAY,iBACZC,SAAUtB,EACVI,MAAOZ,EACPW,KAAK,WACLoB,QAAQ,2CACRC,MAAM,8EAER,SAAC,IAAD,CAAmBE,MAAM,OAAzB,UACE,SAAC,IAAD,CAAQC,EAAE,UAAUT,KAAK,KAAKU,QA/DpB,kBAAM7B,GAASD,EAAf,EA+DV,SACGA,GAAO,SAAC,IAAD,KAAkB,SAAC,IAAD,YAKhC,SAAC,IAAD,CACEQ,UAAWC,EACXa,KAAK,SACLS,GAAG,OACHC,GAAG,OACHhB,GAAG,KACHiB,YAAY,QANd,uBAaP,ECzED,EAlBkB,WAChB,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAKjB,OAAIJ,GACK,SAAC,KAAD,CAAUK,GAAG,eAGpB,iCACE,wCACA,SAAC,EAAD,CAAW5C,SAVK,SAAA6C,GAClBH,GAASI,EAAAA,EAAAA,IAAMD,GAChB,MAWF,C","sources":["components/LoginForm/initialState.js","webpack://react-homework-template/./src/components/LoginForm/login-form.module.css?1212","components/LoginForm/LoginForm.jsx","components/Page/LoginPage/LoginPage.jsx"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login-form_form__S9chl\",\"input\":\"login-form_input__MNXMG\",\"btn\":\"login-form_btn__83mr+\"};","import { useState, useCallback } from 'react';\nimport initialState from './initialState';\nimport css from './login-form.module.css';\n\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputRightElement,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nconst LoginForm = ({ onSubmit }) => {\n  const [store, setState] = useState({ ...initialState });\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...store });\n    setState({ ...initialState });\n  };\n\n  const { email, password } = store;\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <FormControl\n        boxSize=\"500\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        isRequired\n      >\n        <FormLabel mt=\"15\" htmlFor=\"email\">\n          Email\n        </FormLabel>\n        <Input\n          className={css.input}\n          focusBorderColor=\"green.300\"\n          size=\"md\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n          value={email}\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          title=\"Password must be include @  and .\"\n        />\n        <FormLabel mt=\"15\" htmlFor=\"password\">\n          Password\n        </FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            className={css.input}\n            focusBorderColor=\"green.300\"\n            size=\"md\"\n            id=\"password\"\n            pr=\"4.5rem\"\n            type={show ? 'text' : 'password'}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n            value={password}\n            name=\"password\"\n            pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{7,}$\"\n            title=\"Password must be at least 7 characters long, include letters and numbers\"\n          />\n          <InputRightElement width=\"3rem\">\n            <Button h=\"1.75rem\" size=\"md\" onClick={handleClick}>\n              {show ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n\n        <Button\n          className={css.btn}\n          type=\"submit\"\n          mr=\"auto\"\n          ml=\"auto\"\n          mt=\"20\"\n          colorScheme=\"green\"\n        >\n          Login\n        </Button>\n      </FormControl>\n    </form>\n  );\n};\nexport default LoginForm;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { login } from 'redux/auth/auth-operation';\nimport { isUserLogin } from 'redux/auth/auth-selector';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <>\n      <h1>Login Page</h1>\n      <LoginForm onSubmit={handleLogin} />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["email","password","onSubmit","useState","initialState","store","setState","show","setShow","handleChange","useCallback","target","name","value","prevState","className","css","e","preventDefault","boxSize","display","flexDirection","isRequired","mt","htmlFor","I","focusBorderColor","size","id","type","placeholder","onChange","pattern","title","pr","width","h","onClick","mr","ml","colorScheme","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","login"],"sourceRoot":""}